openapi: 3.0.3
info:
  title: "统一数据查询服务 (UQP)"
  description: "遵循UQP协议的统一数据查询服务，支持外部API查询、统计查询和NL2SQL查询的智能路由"
  version: "2.0.0"
servers:
  - url: http://192.168.20.2:9091
    description: "本地开发环境 (局域网访问)"
paths:
  /api/uqp/query:
    post:
      summary: "统一查询接口 (UQP)"
      description: "智能路由到合适的查询处理器，支持外部API查询和NL2SQL查询"
      operationId: "uqpQuery"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UQPRequest'
            examples:
              station_info_query:
                summary: "站点信息查询"
                value:
                  question: "获取所有站点信息"
                  intent_hint: "EXTERNAL_API"
              detection_items_query:
                summary: "监测项目查询"
                value:
                  question: "获取所有监测项目列表"
                  intent_hint: "EXTERNAL_API"
              general_query:
                summary: "一般查询"
                value:
                  question: "查询今天的空气质量数据"
                  intent_hint: "GENERAL"
              unknown_query:
                summary: "未知意图查询"
                value:
                  question: "帮我查询一些数据"
                  intent_hint: "UNKNOWN"
      responses:
        '200':
          description: "查询成功"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UQPResponse'
              examples:
                success_data:
                  summary: "成功返回数据"
                  value:
                    status: "success"
                    response_type: "data"
                    payload:
                      format: "dataframe"
                      value: [{"stationCode": "001", "stationName": "站点1"}]
                    debug_info:
                      execution_path: "EXTERNAL_API_HANDLER"
                      api_endpoint: "GetStation"
                success_message:
                  summary: "成功返回消息"
                  value:
                    status: "success"
                    response_type: "message"
                    payload:
                      format: "text"
                      value: "查询完成"
                    debug_info:
                      execution_path: "NL2SQL_HANDLER"
                clarification_needed:
                  summary: "需要澄清"
                  value:
                    status: "clarification_needed"
                    response_type: "message"
                    payload:
                      format: "text"
                      value: "请提供更多信息..."
                    debug_info:
                      execution_path: "EXTERNAL_API_HANDLER"
        '400':
          description: "请求格式错误"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "服务器内部错误"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
components:
  schemas:
    UQPRequest:
      type: object
      properties:
        question:
          type: string
          description: "用户的自然语言问题"
          example: "获取所有站点信息"
        intent_hint:
          type: string
          description: "意图提示，帮助后端智能路由"
          enum: 
            - "EXTERNAL_API"
            - "STATION_INFO"
            - "DETECTION_ITEMS"
            - "INSTRUMENTS"
            - "STATION_DATA"
            - "STATISTICS"
            - "GENERAL"
            - "UNKNOWN"
          example: "EXTERNAL_API"
        history:
          type: array
          description: "对话历史记录，用于多轮对话"
          items:
            type: object
            properties:
              role:
                type: string
                enum: ["user", "assistant"]
              content:
                type: string
          example: [{"role": "user", "content": "之前的问题"}]
      required:
        - question
      additionalProperties: false
    
    UQPResponse:
      type: object
      properties:
        status:
          type: string
          description: "查询状态"
          enum: ["success", "error", "clarification_needed"]
        response_type:
          type: string
          description: "响应类型"
          enum: ["data", "message"]
        payload:
          type: object
          description: "响应内容"
          properties:
            format:
              type: string
              enum: ["dataframe", "text"]
            value:
              oneOf:
                - type: string
                - type: array
                  items:
                    type: object
          required:
            - format
            - value
        debug_info:
          type: object
          description: "调试信息"
          properties:
            execution_path:
              type: string
              description: "执行路径"
            executed_sql:
              type: string
              description: "执行的SQL语句"
            api_endpoint:
              type: string
              description: "调用的API端点"
            error:
              type: string
              description: "错误信息"
          nullable: true
      required:
        - status
        - response_type
        - payload
      additionalProperties: false
    
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["error"]
        response_type:
          type: string
          enum: ["message"]
        payload:
          type: object
          properties:
            format:
              type: string
              enum: ["text"]
            value:
              type: string
        debug_info:
          type: object
          nullable: true
      required:
        - status
        - response_type
        - payload

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []